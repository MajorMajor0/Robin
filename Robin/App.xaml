<!--This file is part of Robin.

Robin is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published
version 3 of the License, or (at your option) any later version.

Robin is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with Robin.  If not, see http://www.gnu.org/licenses/.-->

<Application x:Class="Robin.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:Robin"
			 xmlns:System="clr-namespace:System;assembly=mscorlib"
			 StartupUri="MainWindow.xaml"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 d1p1:Ignorable="d"
			 xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
	<Application.Resources>
		<ResourceDictionary>

			<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

			<local:IntToVisibilityConverter x:Key="intToVisibilityConverter" />

            <local:BooleanToHiddenConverter x:Key="boolToHiddenConverter" />

            <local:DateToVisibilityConverter x:Key="dateToVisibilityConverter" />

			<local:FileToVisibilityConverter x:Key="fileToVisibilityConverter" />

			<local:ImageConverter x:Key="ImageConverter" />

			<local:PreferredMultiValueConverter x:Key="PreferredMultiValueConverter" />
			
			<BitmapImage x:Key="ArtNotFoundImage"
						 UriSource="/Images/Snow.png" />
			<BitmapImage x:Key="RobinIcon"
						 UriSource="/Images/Robin.jpg" />
			<BitmapImage x:Key="SearchIcon"
						 UriSource="/Images/SearchIcon.png" />
			<BitmapImage x:Key="TestPattern"
						 UriSource="/Images/TestPattern.png" />
            <Color x:Key="Selected_Color">#FF4687A6</Color>
			<!--<Color x:Key="Text_Color">#C41E3A</Color> -->
			<!--Cardinal red-->
			<!--<Color x:Key="Text_Color">#000066</Color> -->
			<!--Cardinal blue-->
			<!--<Color x:Key="Text_Color">#FEDB00</Color> -->
			<!--Cardinal yellow-->
			<!--<Color x:Key="Text_Color">#1B365D</Color> -->
			<!--Blue-->
			<!--<Color x:Key="Text_Color">#D7D2CB</Color> -->
			<!--Tan-->
			<!--<Color x:Key="Text_Color">#FFFFFF00</Color> -->
			<!--Yellow-->
			<Color x:Key="Text_Color">#FFFFD700</Color>
			<!--Gold-->
			<!--Yellow-->


			<SolidColorBrush x:Key="Normal_Brush"
							 Color="Silver" />
			<SolidColorBrush x:Key="Heading0_Brush"
							 Color="{StaticResource Text_Color}" />
			<SolidColorBrush x:Key="Heading1_Brush"
							 Color="{StaticResource Text_Color}" />
			<SolidColorBrush x:Key="Heading2_Brush"
							 Color="{StaticResource Text_Color}" />
			<SolidColorBrush x:Key="Cell_Brush"
							 Color="#323232" />
			<SolidColorBrush x:Key="BackDrop_Brush"
							 Color="Black" />
			<SolidColorBrush x:Key="Selected_Brush"
							 Color="{StaticResource Selected_Color}" />
			<SolidColorBrush x:Key="Highlight_Brush"
							 Color="{StaticResource Selected_Color}"
							 Opacity=".3" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
							 Color="{StaticResource Selected_Color}"
							 Opacity=".3" />
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
							 Color="{StaticResource Selected_Color}" />

			<FontFamily x:Key="NormalFontFamily">Calibri</FontFamily>
            
			<FontWeight x:Key="NormalFontWeight">Light</FontWeight>
            
			<System:Double x:Key="NormalFontSize">17</System:Double>

			<Style TargetType="ListBox">
				<Setter Property="Background"
						Value="Transparent" />
				<Setter Property="BorderBrush"
						Value="Transparent" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
						Value="Disabled" />
			</Style>
			
			
			<Style x:Key="WindowStyle1"
				   TargetType="{x:Type Window}">
				<Setter Property="Background"
						Value="Black" />
			</Style>
			<Style x:Key="NormalBox"
				   TargetType="TextBox">
				<Setter Property="FontFamily"
						Value="{StaticResource NormalFontFamily}" />
				<Setter Property="FontSize"
						Value="{StaticResource NormalFontSize}" />
				<Setter Property="Foreground"
						Value="{StaticResource Normal_Brush}" />
				<Setter Property="Background"
						Value="Transparent" />
				<Setter Property="BorderBrush"
						Value="Transparent" />
				<Setter Property="FocusVisualStyle"
						Value="{x:Null}" />
			</Style>
			<Style x:Key="Normal"
				   TargetType="TextBlock">
				<Setter Property="FontFamily"
						Value="{StaticResource NormalFontFamily}" />
				<Setter Property="FontSize"
						Value="{StaticResource NormalFontSize}" />
				<Setter Property="Foreground"
						Value="{StaticResource Normal_Brush}" />
				<Setter Property="TextWrapping"
						Value="Wrap" />
			</Style>
			<Style x:Key="Heading0"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource Normal}">
				<Setter Property="Foreground"
						Value="{StaticResource Heading1_Brush}" />
				<Setter Property="FontWeight"
						Value="Bold" />
				<Setter Property="Margin"
						Value="0,0,0,3" />
			</Style>
			<Style x:Key="Heading1"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource Normal}">
				<Setter Property="Foreground"
						Value="{StaticResource Heading1_Brush}" />
			</Style>
			<Style x:Key="Heading2"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource Normal}">
				<Setter Property="Foreground"
						Value="{StaticResource Heading2_Brush}" />
			</Style>
			<Style x:Key="NormalControl"
				   TargetType="TextBlock">
				<Setter Property="FontFamily"
						Value="{StaticResource NormalFontFamily}" />
				<Setter Property="FontWeight"
						Value="{StaticResource NormalFontWeight}" />
				<Setter Property="FontSize"
						Value="{StaticResource NormalFontSize}" />
			</Style>
			<Style x:Key="CellStyle"
				   TargetType="Border">
				<Setter Property="BorderBrush"
						Value="{StaticResource BackDrop_Brush}" />
				<Setter Property="BorderThickness"
						Value="3" />
				<Setter Property="CornerRadius"
						Value="5" />
				<Setter Property="Background"
						Value="{StaticResource Cell_Brush}" />
				<Setter Property="Padding"
						Value="10" />
			</Style>
			<Style x:Key="HorizontalGridSplitterStyle1"
				   TargetType="GridSplitter">
				<Setter Property="Background"
						Value="{StaticResource BackDrop_Brush}" />
				<Setter Property="HorizontalAlignment"
						Value="Stretch" />
				<Setter Property="Height"
						Value="4" />
			</Style>
			<Style x:Key="VerticalGridSplitterStyle1"
				   TargetType="GridSplitter">
				<Setter Property="Background"
						Value="{StaticResource BackDrop_Brush}" />
				<Setter Property="VerticalAlignment"
						Value="Stretch" />
				<Setter Property="Width"
						Value="4" />
			</Style>
			<Style x:Key="SelectorButtonStyle"
				   TargetType="ToggleButton">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="Height"
						Value="24" />
				<Setter Property="VerticalAlignment"
						Value="Stretch" />
				<Setter Property="VerticalContentAlignment"
						Value="Center" />
				<Setter Property="Margin"
						Value="3,0,3,0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Border Name="border"
									BorderBrush="White"
									Background="Transparent">
								<ContentPresenter HorizontalAlignment="Center"
												  VerticalAlignment="Center" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="border"
											Property="Background"
											Value="{StaticResource Highlight_Brush}" />
								</Trigger>
								<Trigger Property="ToggleButton.IsChecked"
										 Value="True">
									<Setter TargetName="border"
											Property="Background"
											Value="{StaticResource Selected_Brush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="SelectorButtonTextStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource Heading0}">
				<Setter Property="Text"
						Value="{Binding Name}" />

				<Setter Property="HorizontalAlignment"
						Value="Center" />
			</Style>


		</ResourceDictionary>
	</Application.Resources>
</Application>
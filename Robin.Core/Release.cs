//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Robin.Core
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Collections.ObjectModel;
    
    public partial class Release : INotifyPropertyChanged
    {
        private long _iD;
    	public long ID 
    	{ 
    		get { return _iD; } 
    		set { _iD = value; OnPropertyChanged("ID"); } 
    	}
    
        private Nullable<long> _iD_GB;
    	public Nullable<long> ID_GB 
    	{ 
    		get { return _iD_GB; } 
    		set { _iD_GB = value; OnPropertyChanged("ID_GB"); } 
    	}
    
        private Nullable<long> _iD_GDB;
    	public Nullable<long> ID_GDB 
    	{ 
    		get { return _iD_GDB; } 
    		set { _iD_GDB = value; OnPropertyChanged("ID_GDB"); } 
    	}
    
        private Nullable<long> _iD_OVG;
    	public Nullable<long> ID_OVG 
    	{ 
    		get { return _iD_OVG; } 
    		set { _iD_OVG = value; OnPropertyChanged("ID_OVG"); } 
    	}
    
        private Nullable<long> _iD_LBG;
    	public Nullable<long> ID_LBG 
    	{ 
    		get { return _iD_LBG; } 
    		set { _iD_LBG = value; OnPropertyChanged("ID_LBG"); } 
    	}
    
        private Nullable<long> _iD_LB;
    	public Nullable<long> ID_LB 
    	{ 
    		get { return _iD_LB; } 
    		set { _iD_LB = value; OnPropertyChanged("ID_LB"); } 
    	}
    
        private Nullable<long> _game_ID;
    	public Nullable<long> Game_ID 
    	{ 
    		get { return _game_ID; } 
    		set { _game_ID = value; OnPropertyChanged("Game_ID"); } 
    	}
    
        private long _platform_ID;
    	public long Platform_ID 
    	{ 
    		get { return _platform_ID; } 
    		set { _platform_ID = value; OnPropertyChanged("Platform_ID"); } 
    	}
    
        private long _region_ID;
    	public long Region_ID 
    	{ 
    		get { return _region_ID; } 
    		set { _region_ID = value; OnPropertyChanged("Region_ID"); } 
    	}
    
        private Nullable<long> _rom_ID;
    	public Nullable<long> Rom_ID 
    	{ 
    		get { return _rom_ID; } 
    		set { _rom_ID = value; OnPropertyChanged("Rom_ID"); } 
    	}
    
        private string _special;
    	public string Special 
    	{ 
    		get { return _special; } 
    		set { _special = value; OnPropertyChanged("Special"); } 
    	}
    
        private string _title;
    	public string Title 
    	{ 
    		get { return _title; } 
    		set { _title = value; OnPropertyChanged("Title"); } 
    	}
    
        private Nullable<System.DateTime> _date;
    	public Nullable<System.DateTime> Date 
    	{ 
    		get { return _date; } 
    		set { _date = value; OnPropertyChanged("Date"); } 
    	}
    
        private string _language;
    	public string Language 
    	{ 
    		get { return _language; } 
    		set { _language = value; OnPropertyChanged("Language"); } 
    	}
    
        private string _version;
    	public string Version 
    	{ 
    		get { return _version; } 
    		set { _version = value; OnPropertyChanged("Version"); } 
    	}
    
        /* private bool _preferred;
     	public bool Preferred 
     	{ 
    		get { return _preferred; } 
    		set { _preferred = value; OnPropertyChanged("Preferred"); } 
    	}
    */
        private long _playCount;
    	public long PlayCount 
    	{ 
    		get { return _playCount; } 
    		set { _playCount = value; OnPropertyChanged("PlayCount"); } 
    	}
    
    
        public virtual Game Game { get; set; }
        public virtual GBRelease GBRelease { get; set; }
        public virtual GDBRelease GDBRelease { get; set; }
        public virtual LBGame LBGame { get; set; }
        public virtual LBRelease LBRelease { get; set; }
        public virtual OVGRelease OVGRelease { get; set; }
        public virtual Platform Platform { get; set; }
        public virtual Region Region { get; set; }
        public virtual Rom Rom { get; set; }
     
        public event PropertyChangedEventHandler PropertyChanged;
    
        protected void OnPropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }
    	
        protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            if (PropertyChanged != null)
            {
                WhenPropertyChanged(e);
                PropertyChanged(this, e);
            }
        }
    
        partial void WhenPropertyChanged(PropertyChangedEventArgs e);
        
    }
}
